r
bt
p ad
p found
q
r
bt
p add
p ad
p mark_idx(ad)
p mark_mask(ad)
p found
q
r
p start
p bd[i][j]
bt
p bd[i][j] + 'a'
p start[0]
p start[bd[i][j]]
p info
p &info
p &start
q
a
abort
stop
r
bd[i]
p bd[i]
p &bd[i]
p bd[i][j]
p start
p &start
bt
p found
p state-
p state
p state->found
p state->found[0]
p state->found[1]
p start[(int)bd[i][j])
p start[(int)bd[i][j]]
p info
p &info
info = 1
info1
info=1
make
r
bt
make
r
make
s
r
make
s
r
sto
make
make
make
make
r
p start
p &start
make
sto
r
make
stop
r
q
r
bt
q
b test.cpp:18
r
s
p t.starts_word(0)
p t.is_word(0)
p t.descent(0)->is_word(0)
p t.descend(0)->is_word(0)
p t.descend(0)->descend(0)
p t.descend(0)->descend(0)->descend('h'-'a')
p t.descend(0)->descend(0)->descend('h'-'a')->descend('e'-'a')
p t.descend(0)->descend(0)->descend('h'-'a')->descend('e'-'a')->is_word('d'-'a')
p t.descend(0)->descend(0)->descend('h'-'a')->descend('e'-'a')->is_word('c'-'a')
p t.descend(0)->descend(0)->descend(0)->descend('h'-'a')->descend('e'-'a')->is_word('c'-'a')
quit
r
q
r
bt
q
r
bt
q
r
p childrenn
p children
bt
q
r
bt
q
r
bt
q
r
bt
q
r
bt
p i
quit
